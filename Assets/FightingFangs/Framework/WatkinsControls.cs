//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/FightingFangs/Framework/WatkinsControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @WatkinsControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @WatkinsControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""WatkinsControls"",
    ""maps"": [
        {
            ""name"": ""L_Player"",
            ""id"": ""d6fd619c-5e91-4326-8cdd-7bb088324327"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Button"",
                    ""id"": ""57650ff6-3c1d-4390-94a4-10773bd46614"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Kick"",
                    ""type"": ""Button"",
                    ""id"": ""f07a9912-2831-41aa-91ab-a54d4d85c724"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""aff8dfd7-beac-4bc2-a615-c3bf14312b49"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c75bbe7c-c2ab-484b-bf78-14cb0703ee73"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fc176370-17fe-4f76-ada0-c402ac9c044e"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""4e10b6f2-33f1-4d1d-bdd3-190866cb250e"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""07386581-68b6-4875-a380-1dd22ab2e120"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""cce52185-eab3-44a1-8020-ffd7c07b81a1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e069fc2d-e607-46e5-95c1-4b161c17977d"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75246f6a-5611-4149-93c7-0591973297f2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LevelLoads"",
            ""id"": ""49eb0c1d-d40f-4589-91fe-bf020665c227"",
            ""actions"": [
                {
                    ""name"": ""StartLevel"",
                    ""type"": ""Button"",
                    ""id"": ""eeaf5f9e-6a68-4d7d-bede-a42a9891d9e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EthiopiaLevel"",
                    ""type"": ""Button"",
                    ""id"": ""8aeb99e1-bb53-469e-8a2c-e013144c86fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HongKongLevel"",
                    ""type"": ""Button"",
                    ""id"": ""1e37fda8-cc3d-4d0b-95db-5c5235d9c398"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JapanLevel"",
                    ""type"": ""Button"",
                    ""id"": ""38010f21-a936-4325-9f27-41b4bfc22dff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NightClubLevel"",
                    ""type"": ""Button"",
                    ""id"": ""0d048ed6-7d24-4411-aa5d-9a2dd7068b2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""61ff1be6-0889-4324-a708-43c0455356cf"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c28d7e9-d069-46e5-9d81-6cb97756fdb8"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d324388-6ce8-4ddb-8ec9-16e5c5d8cc27"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EthiopiaLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5d40b41-0f3b-4469-b1c0-599089c5dc40"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HongKongLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a68a1de9-ffab-4975-8fa5-b9b2a1cd140f"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JapanLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e12157ec-37b0-41bd-aebe-a4477a26fb9e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NightClubLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // L_Player
        m_L_Player = asset.FindActionMap("L_Player", throwIfNotFound: true);
        m_L_Player_Movement = m_L_Player.FindAction("Movement", throwIfNotFound: true);
        m_L_Player_Kick = m_L_Player.FindAction("Kick", throwIfNotFound: true);
        // LevelLoads
        m_LevelLoads = asset.FindActionMap("LevelLoads", throwIfNotFound: true);
        m_LevelLoads_StartLevel = m_LevelLoads.FindAction("StartLevel", throwIfNotFound: true);
        m_LevelLoads_EthiopiaLevel = m_LevelLoads.FindAction("EthiopiaLevel", throwIfNotFound: true);
        m_LevelLoads_HongKongLevel = m_LevelLoads.FindAction("HongKongLevel", throwIfNotFound: true);
        m_LevelLoads_JapanLevel = m_LevelLoads.FindAction("JapanLevel", throwIfNotFound: true);
        m_LevelLoads_NightClubLevel = m_LevelLoads.FindAction("NightClubLevel", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // L_Player
    private readonly InputActionMap m_L_Player;
    private IL_PlayerActions m_L_PlayerActionsCallbackInterface;
    private readonly InputAction m_L_Player_Movement;
    private readonly InputAction m_L_Player_Kick;
    public struct L_PlayerActions
    {
        private @WatkinsControls m_Wrapper;
        public L_PlayerActions(@WatkinsControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_L_Player_Movement;
        public InputAction @Kick => m_Wrapper.m_L_Player_Kick;
        public InputActionMap Get() { return m_Wrapper.m_L_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(L_PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IL_PlayerActions instance)
        {
            if (m_Wrapper.m_L_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_L_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_L_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_L_PlayerActionsCallbackInterface.OnMovement;
                @Kick.started -= m_Wrapper.m_L_PlayerActionsCallbackInterface.OnKick;
                @Kick.performed -= m_Wrapper.m_L_PlayerActionsCallbackInterface.OnKick;
                @Kick.canceled -= m_Wrapper.m_L_PlayerActionsCallbackInterface.OnKick;
            }
            m_Wrapper.m_L_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Kick.started += instance.OnKick;
                @Kick.performed += instance.OnKick;
                @Kick.canceled += instance.OnKick;
            }
        }
    }
    public L_PlayerActions @L_Player => new L_PlayerActions(this);

    // LevelLoads
    private readonly InputActionMap m_LevelLoads;
    private ILevelLoadsActions m_LevelLoadsActionsCallbackInterface;
    private readonly InputAction m_LevelLoads_StartLevel;
    private readonly InputAction m_LevelLoads_EthiopiaLevel;
    private readonly InputAction m_LevelLoads_HongKongLevel;
    private readonly InputAction m_LevelLoads_JapanLevel;
    private readonly InputAction m_LevelLoads_NightClubLevel;
    public struct LevelLoadsActions
    {
        private @WatkinsControls m_Wrapper;
        public LevelLoadsActions(@WatkinsControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @StartLevel => m_Wrapper.m_LevelLoads_StartLevel;
        public InputAction @EthiopiaLevel => m_Wrapper.m_LevelLoads_EthiopiaLevel;
        public InputAction @HongKongLevel => m_Wrapper.m_LevelLoads_HongKongLevel;
        public InputAction @JapanLevel => m_Wrapper.m_LevelLoads_JapanLevel;
        public InputAction @NightClubLevel => m_Wrapper.m_LevelLoads_NightClubLevel;
        public InputActionMap Get() { return m_Wrapper.m_LevelLoads; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LevelLoadsActions set) { return set.Get(); }
        public void SetCallbacks(ILevelLoadsActions instance)
        {
            if (m_Wrapper.m_LevelLoadsActionsCallbackInterface != null)
            {
                @StartLevel.started -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnStartLevel;
                @StartLevel.performed -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnStartLevel;
                @StartLevel.canceled -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnStartLevel;
                @EthiopiaLevel.started -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnEthiopiaLevel;
                @EthiopiaLevel.performed -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnEthiopiaLevel;
                @EthiopiaLevel.canceled -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnEthiopiaLevel;
                @HongKongLevel.started -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnHongKongLevel;
                @HongKongLevel.performed -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnHongKongLevel;
                @HongKongLevel.canceled -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnHongKongLevel;
                @JapanLevel.started -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnJapanLevel;
                @JapanLevel.performed -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnJapanLevel;
                @JapanLevel.canceled -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnJapanLevel;
                @NightClubLevel.started -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnNightClubLevel;
                @NightClubLevel.performed -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnNightClubLevel;
                @NightClubLevel.canceled -= m_Wrapper.m_LevelLoadsActionsCallbackInterface.OnNightClubLevel;
            }
            m_Wrapper.m_LevelLoadsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @StartLevel.started += instance.OnStartLevel;
                @StartLevel.performed += instance.OnStartLevel;
                @StartLevel.canceled += instance.OnStartLevel;
                @EthiopiaLevel.started += instance.OnEthiopiaLevel;
                @EthiopiaLevel.performed += instance.OnEthiopiaLevel;
                @EthiopiaLevel.canceled += instance.OnEthiopiaLevel;
                @HongKongLevel.started += instance.OnHongKongLevel;
                @HongKongLevel.performed += instance.OnHongKongLevel;
                @HongKongLevel.canceled += instance.OnHongKongLevel;
                @JapanLevel.started += instance.OnJapanLevel;
                @JapanLevel.performed += instance.OnJapanLevel;
                @JapanLevel.canceled += instance.OnJapanLevel;
                @NightClubLevel.started += instance.OnNightClubLevel;
                @NightClubLevel.performed += instance.OnNightClubLevel;
                @NightClubLevel.canceled += instance.OnNightClubLevel;
            }
        }
    }
    public LevelLoadsActions @LevelLoads => new LevelLoadsActions(this);
    public interface IL_PlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnKick(InputAction.CallbackContext context);
    }
    public interface ILevelLoadsActions
    {
        void OnStartLevel(InputAction.CallbackContext context);
        void OnEthiopiaLevel(InputAction.CallbackContext context);
        void OnHongKongLevel(InputAction.CallbackContext context);
        void OnJapanLevel(InputAction.CallbackContext context);
        void OnNightClubLevel(InputAction.CallbackContext context);
    }
}
